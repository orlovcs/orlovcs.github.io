{"componentChunkName":"component---src-templates-docs-js","path":"/CS458/Module_5","result":{"data":{"site":{"siteMetadata":{"title":"ORLOVCS NOTES","docsLocation":"https://orlovcs.tech/notes"}},"mdx":{"fields":{"id":"00b51e32-85ab-5b24-be53-e98e31776110","title":"Module 5","slug":"/CS458/Module_5"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Module 5\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Module 5 - Internet Application Security and Privacy\"), mdx(\"p\", null, \"Cryptography - Turning plaintext into ciphertext, send message over unsecure medium, separate security of the medium from security of the message\"), mdx(\"p\", null, \"Cryptanalysis - Breaking secret messages\"), mdx(\"p\", null, \"Cryptology studies both of these\"), mdx(\"p\", null, \"Three components to cryptography:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Confidentiality\"), \" - Prevent attacker from reading message\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Integrity\"), \" - Prevent attacker from modifying message\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Authenticity\"), \" - Prevent attacker from impersonating sender\")), mdx(\"p\", null, \"Kerchkoff\", \"'\", \"s Principle - Overall security should not rely on a secret that is hard to change\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--System is at most secure as number of keys\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Best cryptosystem is where all attacker can do is guess keys\")), mdx(\"p\", null, \"Attacker may know\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Algorithm\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Part of plaintext\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Corresponding plaintexts and ciphers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Ways to access oracle\")), mdx(\"p\", null, \"Symmetric cryptography/Secret Key encryption - Key sender uses to encrypt messages is the same one recipient uses to decrypt them\"), mdx(\"p\", null, \"One-Time Pad - Unbreakable, XOR key with plaintext only one time\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Cannot use key more than once\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Key needs to be truly random\")), mdx(\"p\", null, \"56 Bit Key was cracked by BOIC in 5 minutes, therefore 128 bit should be standard\"), mdx(\"p\", null, \"Principle of Easiest Penetration should also be considered\"), mdx(\"p\", null, \"Secret key cryptosystems come in two classes:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Stream ciphers - Fast OTP but with pseudorandom key, RC4 is a deprecated example\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Block ciphers - Operate on blocks, splitting them is mode of operation, AES is an example\")), mdx(\"p\", null, \"Asymmetric cryptography - public and secret key pair\"), mdx(\"p\", null, \"Hybrid Cryptography \\u2013 This is faster as it combines the speed of symmetric encryption with the convenience of public key encryption\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Pick random 128 bit key K\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Encrypt with K\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Encrypt key K with public key\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Send encrypted message and key\")), mdx(\"p\", null, \"However even if keys cannot be decrypted, message can be changed while in transmit, need measure of integrity\"), mdx(\"p\", null, \"Cannot use regular checksum since message can be changed without altering it\"), mdx(\"p\", null, \"Hash functions compute message digest such as MD5, they are required to be:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Preimage-resistant - hard to find x for y such that h(x) = y\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Second preimage-resistant - given x, hard to find xx\", \"'\", \" s.t. h(x)=h(x\", \"'\", \")\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Collision-resistant, hard to find two unique values x,x\", \"'\", \" s.t  h(x)=h(x\", \"'\", \")\")), mdx(\"p\", null, \"Hash functions provide integrity only when message digest is secure\"), mdx(\"p\", null, \"Message Authentication Code - keyed hash function where the computed hash value is generated using a secret key\"), mdx(\"p\", null, \"Multiple ways to combine cipher with MAC: Encrypt/then/before/and MAC.\"), mdx(\"p\", null, \"Need an authenticated encryption mode to securely combine cipher and MAC\"), mdx(\"p\", null, \"Repudiation - Sender cannot prove that they did not impersonate and make up the tag and message up themselves\"), mdx(\"p\", null, \"We need a digital signature which proves:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Alice sent the message, like a MAC\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Message has not been altered since it was sent, like a MAC\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--We can prove these points to a 3rd party\")), mdx(\"p\", null, \"To make a digital signature:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Alice signs message with private signature key\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Bob verifies message with Alice\", \"'\", \"s public signature key\")), mdx(\"p\", null, \"Hybridize signatures:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Alice sends unsigned message and signature on hash of message\")), mdx(\"p\", null, \"Combine public-key verification and digital signatures\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Alice has (encryption, decryption) \", \"&\", \" (signature, verification)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Alice encrypts her message with Bob\", \"'\", \"s public key and signs cipher with her private signature key\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Bob decrypts cipher with his private key and checks signature with Alice\", \"'\", \"s public signature key\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Alice can sign her encryption key with her signature key\")), mdx(\"p\", null, \"Key Management - Ways to find keys:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Manual Keyring\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Web of trust through a friend\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Trust third parties like CA\", \"'\", \"s\")), mdx(\"p\", null, \"Certificate Authorities - Trusted third parties who receive Alice\", \"'\", \"s public key and other info, sign it with their public key to create a certificate\"), mdx(\"p\", null, \"Everyone assumed to have CA\", \"'\", \"s public key\"), mdx(\"p\", null, \"Common mistakes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Two-time pad\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Assuming encryption provides integrity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Replay/Reaction Attacks\")), mdx(\"p\", null, \"Execute apps only if they are signed\"), mdx(\"p\", null, \"Network cryptography used at every level:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Link - WEP\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Network - VPN\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Transport  - TLS/SSL, Tor\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Application - SSH, PGP, OTR\")), mdx(\"p\", null, \"Link Layer\"), mdx(\"p\", null, \"Link layer is intended to protect LAN, WEP is an example\"), mdx(\"p\", null, \"Wired Equivalent Privacy intended to enforce:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Confidentiality - Prevent adversary from learning traffic\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Access Control - Prevent adversary from learning infrastructure\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Data integrity\")), mdx(\"p\", null, \"WEP problems: Short IV (24 bits long),\"), mdx(\"p\", null, \"The checksum interacts pessimaly with the stream cipher. CRC is linear\"), mdx(\"p\", null, \"The authentication protocol reveals enough information for an attacker to authenticate herself\"), mdx(\"p\", null, \"WEP - 75\"), mdx(\"p\", null, \"WEP - 85\"), mdx(\"p\", null, \"Network Layer\"), mdx(\"p\", null, \"Network Layer Security - security across links is not enough, we need security across entire networks, end-2-end\"), mdx(\"p\", null, \"VPN - Connected two remote networks so that they appear to be a single network:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Each side is connected to VPN gateway\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--The data is encrypted and tunneled to the other side\")), mdx(\"p\", null, \"Tunneling - Sending message in protocol as payload of another protocol\"), mdx(\"p\", null, \"IPSec - A method to setup a VPN with two modes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Transport mode - Only original packet are encrypted, useful for LAN\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Tunnel mode - Contents and header are encrypted, useful for connecting networks\")), mdx(\"p\", null, \"Microsoft PPTP - Old method of VPN with flaws\"), mdx(\"p\", null, \"VPNs based on SSH - IP over PPP over SSH over TCP over IP\"), mdx(\"p\", null, \"Trans Layer - Security = TLS, Privacy = Tor\"), mdx(\"p\", null, \"Main transport layer security is SSL or TLS; provides server auth, integrity, confidentiality:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Client indicates to server which ciphersuites it knows\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Server sends back host name, verification key, admin info and signature from CA\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Client checks if CA signed by client browser embedded public key, host name matches?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Symmetric encryption with MAC proceeds between them\")), mdx(\"p\", null, \"TLS has become the most successful Privacy Enhancing Technology - It just works\"), mdx(\"p\", null, \"Main transport layer privacy mechanism is Tor:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--2 million daily users\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Lets you make TCP connections without revealing your IP address\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Scattered around the Internet are 7000 Tor nodes called Onion Routers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Alice uses something similar to TLS to tunnel through each node until the end\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Message M becomes Ek1(Ek2(Ek3(M)))\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Each node knows Alice is using Tor but do not know which site she visiting\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Website itself only knows it got a connection from last node, this connection is not inherently encrypted\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Anonymity unlinkability(long-term) and linkably(short-term)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--However two connections in quick succession are likely from the same person\")), mdx(\"p\", null, \"Nymity Slider:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Verinymity - SIN\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Persistent Pseudo - Pen Name\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Linkable - Prepaid phone cards\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Unlinkable - Tor\")), mdx(\"p\", null, \"App Layer\"), mdx(\"p\", null, \"Secure Remote Login:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Either send a password over encrypted channel which is cross referenced with hash of your password\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--Or send a random challenge with private signature key\")), mdx(\"p\", null, \"Type 0 remailers - send email to server which remailers it as anonymous, this was shut down due to Scientology leaks\"), mdx(\"p\", null, \"Type 1 remailers - mail is now sent in encrypted chains but reply support has been dropped, no pseudonymity\"), mdx(\"p\", null, \"Nym servers restored association of sender with messages, thereby restoring pseudonymity\"), mdx(\"p\", null, \"Type 2 remailers - introduced constant length messages but requires a special email client to fragment the data\"), mdx(\"p\", null, \"Type 3 remailers - Improved and native support for pseudonymity\"), mdx(\"p\", null, \"PGP  - Originally created by Phil Zimmermann in 1991, got in trouble for this\"), mdx(\"p\", null, \"PGP used for hybrid encryption and digital signature of emails\"), mdx(\"p\", null, \"PGP aimed to create 4 keys: encryption, decryption, signature and verification\"), mdx(\"p\", null, \"Fingerprints created to deal with large public keys - cryptographic hash of the key, no known way to make two different keys have the same fingerprint provided the hashing is collision resistant\"), mdx(\"p\", null, \"Alice can also sign Bob\", \"'\", \"s key to verify that the key is in fact his which she uses\"), mdx(\"p\", null, \"Web of Trust is network of people acting as links for passing around public keys\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Perfect Forward Secrecy\"), \" - Future key compromises should not reveal past communication, use temporary keys for this called session keys created using the Diffie-Hellman protocol\"), mdx(\"p\", null, \"We do not want digital signatures since they are undesirable for private conversations\"), mdx(\"p\", null, \"However we do want authentication\"), mdx(\"p\", null, \"Alice has deniability since we cannot prove she generated her MAC\"), mdx(\"p\", null, \"Off-the-Record messaging provides private messaging with Confidentiality and Authentication as well Perfect Forward Secrecy and Plausible Deniability - Signal is an example which uses Triple Diffie-Hellman or deniable authenticated key exchange or DAKE\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#module-5---internet-application-security-and-privacy","title":"Module 5 - Internet Application Security and Privacy"}]},"parent":{"relativePath":"CS458/Module_5.md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/","title":"Notes"}}},{"node":{"fields":{"slug":"/CHEM120","title":"CHEM120 Physical and Chemical Properties of Matter"}}},{"node":{"fields":{"slug":"/CHEM120L","title":"CHEM120L Chemical Reaction Laboratory 1"}}},{"node":{"fields":{"slug":"/CS115","title":"CS115 Intro to Computer Science 1"}}},{"node":{"fields":{"slug":"/CLAS202","title":"CLAS202 Ancient Roman Society"}}},{"node":{"fields":{"slug":"/CS116","title":"CS116 Intro to Computer Science 2"}}},{"node":{"fields":{"slug":"/CS136","title":"CS136 Elementary Algorithm Design and Data Abstraction"}}},{"node":{"fields":{"slug":"/CS240","title":"CS240 Data Structures and Data Management"}}},{"node":{"fields":{"slug":"/CS245","title":"CS245 Logic and Computation"}}},{"node":{"fields":{"slug":"/CS241","title":"CS241 Foundations of Sequential Programs"}}},{"node":{"fields":{"slug":"/CS246","title":"CS246 Object-Oriented Software Development"}}},{"node":{"fields":{"slug":"/CS251","title":"CS251 Computer Organization and Design"}}},{"node":{"fields":{"slug":"/CS341","title":"CS341 Algorithms"}}},{"node":{"fields":{"slug":"/CS348","title":"CS348 Introduction to Database Management"}}},{"node":{"fields":{"slug":"/CS350","title":"CS350 Operating Systems"}}},{"node":{"fields":{"slug":"/CS349","title":"CS349 User Interfaces"}}},{"node":{"fields":{"slug":"/CS456","title":"CS456 Computer Networks"}}},{"node":{"fields":{"slug":"/CS458","title":"CS458 Computer Security and Privacy"}}},{"node":{"fields":{"slug":"/CS486","title":"CS486/686: Introduction to Artificial Intelligence"}}},{"node":{"fields":{"slug":"/ECON101","title":"ECON101 Introduction to Microeconomics"}}},{"node":{"fields":{"slug":"/ENGL108D","title":"ENGL108D Digital Lives"}}},{"node":{"fields":{"slug":"/ENGL109","title":"ENGL109 Introduction to Academic Writing"}}},{"node":{"fields":{"slug":"/FR151","title":"FR151 Basic French 1"}}},{"node":{"fields":{"slug":"/GEOG102","title":"GEOG102 Global Environmental Systems: Processes and Change"}}},{"node":{"fields":{"slug":"/MATH114","title":"MATH114 Linear Algebra for Science"}}},{"node":{"fields":{"slug":"/MATH127","title":"MATH127 Calculus 1 for the Sciences"}}},{"node":{"fields":{"slug":"/MATH128","title":"MATH128 Calculus 2 for the Sciences"}}},{"node":{"fields":{"slug":"/MATH135","title":"MATH135 Algebra for Honours Mathematics"}}},{"node":{"fields":{"slug":"/MATH239","title":"MATH239 Introduction to Combinatorics"}}},{"node":{"fields":{"slug":"/PHIL145","title":"PHIL145 Critical Thinking"}}},{"node":{"fields":{"slug":"/PHIL256","title":"PHIL256 Introduction to Cognitive Science"}}},{"node":{"fields":{"slug":"/PHIL356","title":"PHIL356 Intelligence in Machines, Humans, and Other Animals"}}},{"node":{"fields":{"slug":"/RS204","title":"RS204 Buddhism"}}},{"node":{"fields":{"slug":"/PHYS131L","title":"PHYS131L Mechanics Lab"}}},{"node":{"fields":{"slug":"/PHYS121","title":"PHYS121 Mechanics"}}},{"node":{"fields":{"slug":"/PSYCH101","title":"PSYCH101 Introductory Psychology"}}},{"node":{"fields":{"slug":"/STAT230","title":"STAT230 Probability"}}},{"node":{"fields":{"slug":"/STAT231","title":"STAT231 Statistics"}}},{"node":{"fields":{"slug":"/CS458/Module_1","title":"Module 1"}}},{"node":{"fields":{"slug":"/SCI206","title":"SCI206 The Physics of How Things Work"}}},{"node":{"fields":{"slug":"/CS458/Module_2","title":"Module 2"}}},{"node":{"fields":{"slug":"/CS458/Module_3","title":"Module 3"}}},{"node":{"fields":{"slug":"/CS458/Module_4","title":"Module 4"}}},{"node":{"fields":{"slug":"/CS458/Module_6","title":"Module 6"}}},{"node":{"fields":{"slug":"/CS458/Module_7","title":"Module 7"}}},{"node":{"fields":{"slug":"/MATH239/Module_1","title":"Combinatorial Analysis"}}},{"node":{"fields":{"slug":"/CS458/Module_5","title":"Module 5"}}},{"node":{"fields":{"slug":"/MATH239/Module_2","title":"Compositions and Strings"}}},{"node":{"fields":{"slug":"/MATH239/Module_3","title":"Recurrences, Binary Trees and Sorting"}}},{"node":{"fields":{"slug":"/MATH239/Module_4","title":"Graph Theory"}}},{"node":{"fields":{"slug":"/MATH239/Module_8","title":"Codes"}}},{"node":{"fields":{"slug":"/RS204/Module_1","title":"Buddha"}}},{"node":{"fields":{"slug":"/RS204/Module_2","title":"Buddhist Worldview"}}},{"node":{"fields":{"slug":"/MATH239/Module_6","title":"Codes"}}},{"node":{"fields":{"slug":"/RS204/Module_3","title":"Theravada"}}},{"node":{"fields":{"slug":"/RS204/Module_4","title":"Mahayana"}}},{"node":{"fields":{"slug":"/RS204/Module_5","title":"Indian Schools of Buddhism"}}},{"node":{"fields":{"slug":"/RS204/Module_6","title":"Tibet"}}},{"node":{"fields":{"slug":"/RS204/Module_7","title":"Buddhism in China"}}},{"node":{"fields":{"slug":"/CS486/Module_1","title":"Agents and Abstraction"}}},{"node":{"fields":{"slug":"/RS204/Module_8","title":"Buddhism in Japan"}}},{"node":{"fields":{"slug":"/CS486/Module_2","title":"States and Searching"}}},{"node":{"fields":{"slug":"/MATH239/Module_5","title":"Trees"}}},{"node":{"fields":{"slug":"/MATH239/Module_7","title":"Planar Graphs"}}}]}},"pageContext":{"id":"00b51e32-85ab-5b24-be53-e98e31776110"}}}